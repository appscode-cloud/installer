
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: managedclusterprofilebindings.profile.k8s.appscode.com
spec:
  group: profile.k8s.appscode.com
  names:
    kind: ManagedClusterProfileBinding
    listKind: ManagedClusterProfileBindingList
    plural: managedclusterprofilebindings
    singular: managedclusterprofilebinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ManagedClusterProfileBinding is the Schema for the managedclusterprofilebindings
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ManagedClusterProfileBindingSpec defines the desired state
              of ManagedClusterProfileBinding
            properties:
              clusterMetadata:
                description: ClusterInfo used in ace-installer
                properties:
                  capi:
                    properties:
                      clusterName:
                        type: string
                      namespace:
                        type: string
                      provider:
                        enum:
                        - capa
                        - capg
                        - capz
                        type: string
                    type: object
                  clusterManagers:
                    items:
                      type: string
                    type: array
                  name:
                    type: string
                  uid:
                    type: string
                required:
                - clusterManagers
                - name
                - uid
                type: object
              features:
                additionalProperties:
                  properties:
                    chart:
                      description: Chart specifies the chart information that will
                        be used by the FluxCD to install the respective feature
                      properties:
                        createNamespace:
                          type: boolean
                        name:
                          description: Name specifies the name of the chart
                          type: string
                        namespace:
                          description: Namespace where the respective feature resources
                            will be deployed.
                          type: string
                        sourceRef:
                          description: SourceRef specifies the source of the chart
                          properties:
                            apiGroup:
                              type: string
                            kind:
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                          required:
                          - name
                          type: object
                        valuesFiles:
                          description: Alternative list of values files to use as
                            the chart values (values.yaml is not included by default),
                            expected to be a relative path in the SourceRef. Values
                            files are merged in the order of this list with the last
                            file overriding the first. Ignored when omitted.
                          items:
                            type: string
                          type: array
                        version:
                          description: Version specifies the version of the chart.
                          type: string
                      required:
                      - name
                      - sourceRef
                      type: object
                    values:
                      description: Values holds the values for this Helm release.
                      x-kubernetes-preserve-unknown-fields: true
                    valuesFrom:
                      description: ValuesFrom holds references to resources containing
                        Helm values for this HelmRelease, and information about how
                        they should be merged.
                      items:
                        description: 'copied from: https://github.com/fluxcd/helm-controller/blob/v0.37.4/api/v2beta2/reference_types.go#L45-L80
                          ValuesReference contains a reference to a resource containing
                          Helm values, and optionally the key they can be found at.'
                        properties:
                          kind:
                            description: Kind of the values referent, valid values
                              are ('Secret', 'ConfigMap').
                            enum:
                            - Secret
                            - ConfigMap
                            type: string
                          name:
                            description: Name of the values referent. Should reside
                              in the same namespace as the referring resource.
                            maxLength: 253
                            minLength: 1
                            type: string
                          optional:
                            description: Optional marks this ValuesReference as optional.
                              When set, a not found error for the values reference
                              is ignored, but any ValuesKey, TargetPath or transient
                              error will still result in a reconciliation failure.
                            type: boolean
                          targetPath:
                            description: TargetPath is the YAML dot notation path
                              the value should be merged at. When set, the ValuesKey
                              is expected to be a single flat value. Defaults to 'None',
                              which results in the values getting merged at the root.
                            maxLength: 250
                            pattern: ^([a-zA-Z0-9_\-.\\\/]|\[[0-9]{1,5}\])+$
                            type: string
                          valuesKey:
                            description: ValuesKey is the data key where the values.yaml
                              or a specific value can be found at. Defaults to 'values.yaml'.
                            maxLength: 253
                            pattern: ^[\-._a-zA-Z0-9]+$
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      type: array
                  type: object
                type: object
              profileRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    default: ""
                    description: 'Name of the referent. This field is effectively
                      required, but due to backwards compatibility is allowed to be
                      empty. Instances of this type with an empty value here are almost
                      certainly wrong. TODO: Add other useful fields. apiVersion,
                      kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Drop `kubebuilder:default` when controller-gen doesn''t
                      need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            required:
            - clusterMetadata
            - profileRef
            type: object
          status:
            description: ManagedClusterProfileBindingStatus defines the observed state
              of ManagedClusterProfileBinding
            properties:
              conditions:
                description: Represents the latest available observations of a GrafanaDashboard
                  current state.
                items:
                  description: Condition defines an observation of a object operational
                    state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human-readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether this field
                        is considered a guaranteed API. This field may not be empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary util can be useful (see
                        .node.status.util), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              manifestWorks:
                additionalProperties:
                  type: string
                type: object
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  for this resource. It corresponds to the resource's generation,
                  which is updated on mutation by the API Server.
                format: int64
                type: integer
              phase:
                description: Phase indicates the state this Vault cluster jumps in.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
