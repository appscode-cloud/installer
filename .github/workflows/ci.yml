name: CI

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: 'stable'
          cache: true

      - name: Prepare Host
        run: |
          # install yq
          curl -fsSL -o yqq https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
          chmod +x yqq
          sudo mv yqq /usr/local/bin/yqq
          pipx install yq
          # install kubectl
          curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.31.0/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Run checks
        run: |
          make ci
          go test -v ./...

  kubernetes:
    name: Kubernetes
    runs-on: ubuntu-24.04
    needs: build
    strategy:
      matrix:
        k8s: [v1.26.15, v1.27.16, v1.28.9, v1.29.7, v1.30.3, v1.31.0]
    steps:
      - uses: actions/checkout@v1

      - name: Install yq
        run: |
          curl -fsSL -o yqq https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
          chmod +x yqq
          sudo mv yqq /usr/local/bin/yqq

      - name: Create Kubernetes ${{ matrix.k8s }} cluster
        id: kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.25.0
          config: hack/kubernetes/kind.yaml
          image: kindest/node:${{ matrix.k8s }}

      - name: Prepare cluster for testing
        id: local-path
        run: |
          echo "waiting for nodes to be ready ..."
          kubectl wait --for=condition=Ready nodes --all --timeout=5m
          kubectl get nodes
          echo
          kubectl version
          echo
          echo "install helm 3"
          pushd /usr/local/bin && sudo curl -fsSLO https://github.com/x-helm/helm/releases/latest/download/helm && sudo chmod +x helm && popd

      - name: Test charts
        run: |
          export KUBECONFIG="${HOME}/.kube/config"
          ./hack/scripts/ct.sh

      - name: Test Service Gateway
        run: |
          export KUBECONFIG="${HOME}/.kube/config"
          kubectl delete crds --all
          kubectl apply --validate=false -f https://github.com/cert-manager/cert-manager/releases/latest/download/cert-manager.yaml
          sleep 10
          kubectl wait --for=Create --for=condition=Ready pods -n cert-manager --all --timeout=5m
          ./hack/scripts/test-service-gateway.sh
