{{- if .Values.kubeconfigSecretName }}

apiVersion: batch/v1
kind: Job
metadata:
  name: ace-configure-addon
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook-weight": "2"
    "helm.sh/hook": post-install,post-upgrade,post-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  ttlSecondsAfterFinished: 0
  backoffLimit: 3
  template:
    spec:
      automountServiceAccountToken: false
      containers:
      - name: kubectl
        image: {{ .Values.kubectl.image }}
        workingDir: /var/run/secrets/ocm
        command:
          - sh
          - -c
          - |
              sleep 2; \
              kubectl --kubeconfig=auth/kubeconfig create ns {{ include "ace-ocm-addons.namespace" $ }} || true; \
              hubUID=$(kubectl --kubeconfig=auth/kubeconfig get ns kube-system -o=jsonpath='{.metadata.uid}'); \
              cat >/tmp/resource.yaml <<EOF
              {{- $restpl := $.Files.Get "common/addon/clustersetbinding.yaml" -}}
              {{- tpl $restpl $ | nindent 14 }}
              ---
              {{- $restpl := $.Files.Get "common/addon/placement.yaml" -}}
              {{- tpl $restpl $ | nindent 14 }}
              ---
              {{- $_ := set $ "_hubUID" "SET_HUBID" -}}
              {{- $restpl := $.Files.Get "common/addon/manifestrelicaset.yaml" -}}
              {{- tpl $restpl $ | nindent 14 }}
              EOF; \
              sed -i 's|SET_HUBID|$hubUID|g' /tmp/resource.yaml; \
              kubectl --kubeconfig=auth/kubeconfig apply -f /tmp/resource.yaml
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - mountPath: /var/run/secrets/ocm/auth
          name: ocm-auth
      volumes:
      - name: tmp
        emptyDir: {}
      - name: ocm-auth
        secret:
          defaultMode: 420
          secretName: {{ .Values.kubeconfigSecretName }}
      restartPolicy: Never

{{- end }}
