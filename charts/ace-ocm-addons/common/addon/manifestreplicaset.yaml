apiVersion: work.open-cluster-management.io/v1alpha1
kind: ManifestWorkReplicaSet
metadata:
  name: ace-addons
  namespace: {{ include "ace-ocm-addons.namespace" $ }}
spec:
  placementRefs:
    - name: {{ .Values.placement.name }}
  manifestWorkTemplate:
    # deleteOption:
    #   propagationPolicy: SelectivelyOrphan
    #   selectivelyOrphans:
    #     orphaningRules:
    #       - group: ''
    #         name: ocm-ns
    #         namespace: ''
    #         resource: Namespace
    # manifestConfigs:
    #   - feedbackRules:
    #       - jsonPaths:
    #           - name: lastScheduleTime
    #             path: .status.lastScheduleTime
    #           - name: lastSuccessfulTime
    #             path: .status.lastSuccessfulTime
    #         type: JSONPaths
    #     resourceIdentifier:
    #       group: batch
    #       name: sync-cronjob
    #       namespace: ocm-ns
    #       resource: cronjobs
    workload:
      manifests:
        - kind: Namespace
          apiVersion: v1
          metadata:
            name: kubeops

        - apiVersion: v1
          kind: Secret
          metadata:
            name: ace-features-cred
            namespace: kubeops
          stringData:
            kube-ui-server.yaml: |
              {{- dict "platform" .Values.platform | toYaml | nindent 14 }}
            monitoring-operator.yaml: |
              {{- dict "hubUID" ._hubUID "platform" .Values.platform | toYaml | nindent 14 }}
            catalog-manager.yaml: |
              {{- dict "platform" (dict "baseURL" .Values.platform.baseURL "caBundle" .Values.platform.caBundle) | toYaml | nindent 14 }}
            ace-ocm-addons.yaml: |
              {{- dict "platform" .Values.platform | toYaml | nindent 14 }}

        - apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            name: open-cluster-management:klusterlet-work:ace
            labels:
              open-cluster-management.io/aggregate-to-work: "true"  # with this label, the clusterRole will be selected to aggregate
          rules:
            - apiGroups: ["drivers.x-helm.dev"]
              resources: ["appreleases"]
              verbs: ["get", "list", "watch", "create", "update", "delete", "patch"]
            - apiGroups: ["source.toolkit.fluxcd.io"]
              resources: ["helmrepositories"]
              verbs: ["get", "list", "watch", "create", "update", "delete", "patch"]
            - apiGroups: ["helm.toolkit.fluxcd.io"]
              resources: ["helmreleases"]
              verbs: ["get", "list", "watch", "create", "update", "delete", "patch"]

        {{- $helmrepos := dict
          "bootstrap" (index .Values.helm "repositories" "appscode-charts-oci")
        }}
        {{ range $name, $cfg := $helmrepos }}
        - apiVersion: source.toolkit.fluxcd.io/v1
          kind: HelmRepository
          metadata:
            name: {{ $name }}
            namespace: kubeops
            labels:
              kubernetes.io/metadata.name: {{ $name }}
          spec:
            {{- with $cfg.url }}
            url: {{ . }}
            {{- end }}
            interval: {{ default "30m" $cfg.interval }}
            timeout: {{ default "1m" $cfg.timeout }}

            {{- if hasPrefix "oci://" $cfg.url }}
            type: oci
            {{- end }}

            {{- with $cfg.provider }}
            provider: {{ . }}
            {{- end }}

            {{- if $.Values.registry.credentials }}
            secretRef:
              name: {{ include "ace-ocm-addons.fullname" $ }}-helmcred
            {{- end }}

            {{- if $.Values.registry.certs }}
            secretRef:
              name: {{ include "ace-ocm-addons.fullname" $ }}-helmcert
            {{- end }}
        {{- end }}

        {{- if .Values.registry.credentials }}
        - apiVersion: v1
          kind: Secret
          metadata:
            name: {{ include "ace-ocm-addons.fullname" . }}-helmcred
            namespace: kubeops
          stringData: {{ .Values.registry.credentials | toJson }}
        {{- end }}

        {{- if .Values.registry.certs }}
        - apiVersion: v1
          kind: Secret
          metadata:
            name: {{ include "ace-ocm-addons.fullname" . }}-helmcert
            namespace: kubeops
          stringData: {{ .Values.registry.certs | toJson }}
        {{- end }}

        {{- with (index .Values "helm" "releases" "opscenter-features") }}
        {{- if .enabled }}

        {{ $vals := (omit $.Values "nameOverride" "fullnameOverride" "clusterMetadata" "kubeconfigSecretName" "addonManagerNamespace" "placement" "kubectl") }}

        - apiVersion: helm.toolkit.fluxcd.io/v2
          kind: HelmRelease
          metadata:
            name: opscenter-features
            namespace: kubeops
            labels:
              app.kubernetes.io/component: opscenter-features
          spec:
            interval: 5m
            timeout: 30m
            releaseName: opscenter-features
            targetNamespace: kubeops
            storageNamespace: kubeops
            install:
              createNamespace: {{ $.Values.helm.createNamespace }}
              # crds: CreateReplace
              remediation:
                retries: -1
            upgrade:
              crds: CreateReplace
              remediation:
                retries: -1
            chart:
              spec:
                chart: opscenter-features
                version: {{ .version | quote }}
                sourceRef:
                  kind: HelmRepository
                  name: bootstrap
                  namespace: kubeops
            valuesFrom:
              - kind: ConfigMap
                name: ace-cluster-info
                valuesKey: clusterinfo.yaml
                optional: true
          {{- with $vals }}
            {{- dict "values" . | toYaml | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- end }}

        {{- with (index .Values "helm" "releases" "kube-ui-server") }}
        {{- if .enabled }}

        {{ $defaults := printf `
        registryFQDN: %s
        ace-user-roles:
          enabled: true
        `
          (include "registry.ghcr" $)
          | fromYaml }}

        {{ $vals := dig "values" dict . }}
        {{ $vals = mergeOverwrite $defaults $vals }}

        - apiVersion: helm.toolkit.fluxcd.io/v2
          kind: HelmRelease
          metadata:
            name: kube-ui-server
            namespace: kubeops
            labels:
              app.kubernetes.io/component: kube-ui-server
          spec:
            interval: 5m
            timeout: 30m
            releaseName: kube-ui-server
            targetNamespace: kubeops
            storageNamespace: kubeops
            install:
              createNamespace: {{ $.Values.helm.createNamespace }}
              # crds: CreateReplace
              remediation:
                retries: -1
            upgrade:
              crds: CreateReplace
              remediation:
                retries: -1
            dependsOn:
            - name: opscenter-features
              namespace: kubeops
            chart:
              spec:
                chart: kube-ui-server
                version: {{ .version | quote }}
                interval: 60m
                sourceRef:
                  kind: HelmRepository
                  name: appscode-charts-oci
                  namespace: kubeops
            valuesFrom:
              - kind: Secret
                name: ace-features-cred
                valuesKey: kube-ui-server.yaml
                optional: true
          {{- with $vals }}
            {{- dict "values" . | toYaml | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- end }}
