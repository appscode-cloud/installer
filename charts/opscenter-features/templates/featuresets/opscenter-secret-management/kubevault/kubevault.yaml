{{ $defaults := printf `
global:
  registryFQDN: %q
` (include "registry.ghcr" $) | fromYaml }}
{{ $_ := set $defaults "kubevault-catalog" $.Values.image }}

{{ $vals := dig "kubevault" "values" (dict) .Values.helm.releases }}
{{ $vals = mergeOverwrite $defaults $vals }}

apiVersion: ui.k8s.appscode.com/v1alpha1
kind: Feature
metadata:
  name: kubevault
  labels:
    app.kubernetes.io/part-of: opscenter-secret-management
spec:
  title: Kubevault
  description: |
    HashiCorp vault operator for Kubernetes.
  icons:
    - src: https://cdn.appscode.com/k8s/icons/menu/cluster.svg
      type: image/svg+xml
  featureSet: opscenter-secret-management
  featureBlock: kubevault
  recommended: false
  requirements:
    features:
      - license-proxyserver
  readinessChecks:
    workloads:
      - group: apps
        version: v1
        kind: Deployment
        selector:
          app.kubernetes.io/name: kubevault-operator

  ignoreDifferences:
  - jsonPointers:
    - /data
    kind: Secret
    name: kubevault-kubevault-webhook-server-apiserver-cert
    namespace: {{ printf "{{ .Release.Namespace }}" }}

  - group: admissionregistration.k8s.io
    kind: MutatingWebhookConfiguration
    name: mutators.engine.kubevault.com
    jqPathExpressions:
    - .webhooks[].clientConfig.caBundle
  - group: admissionregistration.k8s.io
    kind: MutatingWebhookConfiguration
    name: mutators.kubevault.com
    jqPathExpressions:
    - .webhooks[].clientConfig.caBundle
  - group: admissionregistration.k8s.io
    kind: MutatingWebhookConfiguration
    name: mutators.policy.kubevault.com
    jqPathExpressions:
    - .webhooks[].clientConfig.caBundle
  - group: admissionregistration.k8s.io
    kind: ValidatingWebhookConfiguration
    name: validators.engine.kubevault.com
    jqPathExpressions:
    - .webhooks[].clientConfig.caBundle
  - group: admissionregistration.k8s.io
    kind: ValidatingWebhookConfiguration
    name: validators.kubevault.com
    jqPathExpressions:
    - .webhooks[].clientConfig.caBundle

  - group: apiregistration.k8s.io
    kind: APIService
    name: v1alpha1.mutators.engine.kubevault.com
    jsonPointers:
    - /spec/caBundle
  - group: apiregistration.k8s.io
    kind: APIService
    name: v1alpha1.mutators.kubevault.com
    jsonPointers:
    - /spec/caBundle
  - group: apiregistration.k8s.io
    kind: APIService
    name: v1alpha1.mutators.policy.kubevault.com
    jsonPointers:
    - /spec/caBundle
  - group: apiregistration.k8s.io
    kind: APIService
    name: v1alpha1.validators.engine.kubevault.com
    jsonPointers:
    - /spec/caBundle
  - group: apiregistration.k8s.io
    kind: APIService
    name: v1alpha1.validators.kubevault.com
    jsonPointers:
    - /spec/caBundle
  - group: apps
    kind: Deployment
    name: kubevault-kubevault-operator
    namespace: {{ printf "{{ .Release.Namespace }}" }}
    jsonPointers:
    - /spec/template/metadata/annotations/reload
  - group: apps
    kind: Deployment
    name: kubevault-kubevault-webhook-server
    namespace: {{ printf "{{ .Release.Namespace }}" }}
    jsonPointers:
    - /spec/template/metadata/annotations/reload

  chart:
    name: kubevault
    namespace: kubevault
    createNamespace: {{ $.Values.helm.createNamespace }}
    version: {{ dig "kubevault" "version" "" $.Values.helm.releases }}
    sourceRef:
      kind: HelmRepository
      name: appscode-charts-oci
      namespace: {{ .Release.Namespace }}
  valuesFrom:
  {{- if eq (include "clustermanager.openshift" $) "true" }}
    - kind: ConfigMap
      name: ace-openshift-scc
      valuesKey: kubevault.yaml
  {{- end }}
{{- with $vals }}
  {{- dict "values" . | toYaml | nindent 2 }}
{{- end }}
