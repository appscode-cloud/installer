{{ $defaults := printf `
clusterMetadata:
  uid: %q
  name: %q
envoy:
  image: %s
echoserver:
  image: %s
gateway:
  config:
    envoyGateway:
      gateway:
        controllerName: gateway.voyagermesh.com/ace
  deployment:
    envoyGateway:
      image:
        repository: %s
    kubeRbacProxy:
      image:
        repository: %s
  gateway-converter:
    registryFQDN: %s
`
  $.Values.clusterMetadata.uid
  $.Values.clusterMetadata.name
  (include "image.ghcr" (merge (dict "_repo" "voyagermesh/envoy") $))
  (include "image.ghcr" (merge (dict "_repo" "voyagermesh/echoserver") $))
  (include "image.ghcr" (merge (dict "_repo" "voyagermesh/gateway") $))
  (include "image.ghcr" (merge (dict "_repo" "appscode/kube-rbac-proxy") $))
  (include "registry.ghcr" $)
  | fromYaml }}

{{ $vals := dig "service-gateway-presets" "values" (dict) .Values.helm.releases }}
{{ $vals = mergeOverwrite $defaults $vals }}

apiVersion: ui.k8s.appscode.com/v1alpha1
kind: Feature
metadata:
  name: service-gateway-presets
  labels:
    app.kubernetes.io/part-of: saas-core
spec:
  title: Service Gateway Presets
  description: |
    Service Gateway Presets
  icons:
    - src: https://cdn.appscode.com/k8s/icons/menu/cluster.svg
      type: image/svg+xml
  featureSet: saas-core
  featureBlock: catalog-manager
  recommended: true
  requirements:
    features:
      - cert-manager
      # - cert-manager-csi-driver-cacerts
      - external-dns-operator
      # - kubevault
  chart:
    name: service-gateway-presets
    namespace: ace-gw
    createNamespace: {{ $.Values.helm.createNamespace }}
    version: {{ dig "service-gateway-presets" "version" "" $.Values.helm.releases }}
    sourceRef:
      kind: HelmRepository
      name: appscode-charts-oci
      namespace: {{ .Release.Namespace }}
  valuesFrom:
  {{- if eq (include "clustermanager.openshift" $) "true" }}
    - kind: ConfigMap
      name: ace-openshift-scc
      valuesKey: service-gateway-presets.yaml
  {{- end }}
{{- with $vals }}
  {{- dict "values" . | toYaml | nindent 2 }}
{{- end }}
