{{- if not (has "Rancher" .Values.clusterManagers) }}

{{ $alertmanager := printf `
alertmanager:
  alertmanagerSpec:
    image:
      registry: %s
` (include "registry.quay" $) | fromYaml }}

{{ $prometheusOperator := printf `
prometheusOperator:
  admissionWebhooks:
    patch:
      image:
        registry: %s
  image:
    registry: %s
  prometheusConfigReloader:
    image:
      registry: %s
  thanosImage:
    registry: %s
`
  (include "registry.kubernetes" $)
  (include "registry.quay" $)
  (include "registry.quay" $)
  (include "registry.quay" $)
  | fromYaml }}

{{ $prometheus := printf `
prometheus:
  prometheusSpec:
    image:
      registry: %s
` (include "registry.quay" $) | fromYaml }}

{{ $thanosRuler := printf `
thanosRuler:
  thanosRulerSpec:
    image:
      registry: %s
` (include "registry.quay" $) | fromYaml }}

{{ $ksm := printf `
kube-state-metrics:
  image:
    registry: %s
` (include "registry.kubernetes" $) | fromYaml }}

{{ $node := printf `
prometheus-node-exporter:
  image:
    registry: %s
` (include "registry.quay" $) | fromYaml }}

# https://github.com/grafana/helm-charts/blob/main/charts/grafana/README.md
{{ $grafana := printf `
grafana:
  # docker.io
  image:
    repository: %s
  initChownData:
    image:
      repository: %s
  testFramework:
    image: %s
  downloadDashboardsImage:
    repository: %s
  imageRenderer:
    image:
      repository: %s
  # quay.io
  sidecar:
    image:
      repository: %s
`
  (include "image.dockerHub" (merge (dict "_repo" "grafana/grafana") $))
  (include "image.dockerLibrary" (merge (dict "_repo" "busybox") $))
  (include "image.dockerHub" (merge (dict "_repo" "bats/bats") $))
  (include "image.dockerHub" (merge (dict "_repo" "curlimages/curl") $))
  (include "image.dockerHub" (merge (dict "_repo" "grafana/grafana-image-renderer") $))
  (include "image.quay" (merge (dict "_repo" "kiwigrid/k8s-sidecar") $))
  | fromYaml }}

{{ $vals := dict }}
{{ $vals = mergeOverwrite $vals $alertmanager $prometheusOperator $prometheus $thanosRuler $ksm $node $grafana }}

apiVersion: ui.k8s.appscode.com/v1alpha1
kind: Feature
metadata:
  name: kube-prometheus-stack
  labels:
    app.kubernetes.io/part-of: opscenter-monitoring
spec:
  title: Kube Prometheus Stack
  description: |
    Collection of components to monitor Kubernetes native applications with Prometheus and Grafana.
  icons:
  - src: https://cdn.appscode.com/k8s/icons/menu/cluster.svg
    type: image/svg+xml
  featureSet: opscenter-monitoring
  featureBlock: kube-prometheus-stack
  recommended: true
  readinessChecks:
    resources:
    - group: monitoring.coreos.com
      version: v1
      kind: Prometheus
    workloads:
      - group: apps
        version: v1
        kind: StatefulSet
        selector:
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/part-of: kube-prometheus-stack
  chart:
    name: kube-prometheus-stack
    namespace: monitoring
    version: {{ dig "kube-prometheus-stack" "version" "" $.Values.helm.releases }}
    sourceRef:
      kind: HelmRepository
      name: appscode-charts-oci
      namespace: {{ .Release.Namespace }}
{{- with $vals }}
  {{- dict "values" . | toYaml | nindent 2 }}
{{- end }}

{{- end }}
