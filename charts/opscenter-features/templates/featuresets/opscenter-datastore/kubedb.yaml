{{ $ips := list }}
{{- range $secret := $.Values.registry.imagePullSecrets }}
{{ $ips = append $ips (dict "name" $secret) }}
{{- end }}

{{ $defaults := printf `
global:
  registryFQDN: %q
  imagePullSecrets: %v
kubedb-provisioner:
  enabled: true
kubedb-catalog:
  enabled: true
  proxies: %v
kubedb-ops-manager:
  enabled: true
kubedb-autoscaler:
  enabled: true
kubedb-kubestash-catalog:
  enabled: true
  proxies: %v
kubedb-dashboard:
  enabled: false
kubedb-schema-manager:
  enabled: false
kubedb-metrics:
  enabled: false
sidekick:
  enabled: false
` (include "registry.ghcr" $)
  ($ips | toJson)
  ($.Values.image.proxies | toJson )
  ($.Values.image.proxies | toJson )
  | fromYaml }}

{{ $vals := dig "kubedb" "values" (dict) .Values.helm.releases }}
{{ $vals = mergeOverwrite $defaults $vals }}

apiVersion: ui.k8s.appscode.com/v1alpha1
kind: Feature
metadata:
  name: kubedb
  labels:
    app.kubernetes.io/part-of: opscenter-datastore
spec:
  title: KubeDB
  description: |
    Production grade operator for managing databases in Kubernetes.
  icons:
  - src: https://cdn.appscode.com/k8s/icons/menu/cluster.svg
    type: image/svg+xml
  featureSet: opscenter-datastore
  featureBlock: kubedb
  recommended: true
  requirements:
    features:
      - license-proxyserver
  readinessChecks:
    workloads:
      - group: apps
        version: v1
        kind: Deployment
        selector:
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kubedb-provisioner
  chart:
    name: kubedb
    namespace: kubedb
    createNamespace: {{ $.Values.helm.createNamespace }}
    version: {{ dig "kubedb" "version" "" $.Values.helm.releases }}
    sourceRef:
      kind: HelmRepository
      name: appscode-charts-oci
      namespace: {{ .Release.Namespace }}
{{- with $vals }}
  {{- dict "values" . | toYaml | nindent 2 }}
{{- end }}
