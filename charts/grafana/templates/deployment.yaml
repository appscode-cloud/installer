apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "grafana.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "grafana.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "grafana.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "grafana.selectorLabels" . | nindent 8 }}
    spec:
      {{- include "appscode.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "appscode.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "image.registry" . }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3005
              protocol: TCP
          startupProbe:
            httpGet:
              path: /grafana/healthz
              port: http
            # wait for cert and nats to be ready
            initialDelaySeconds: 60
            failureThreshold: 18
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /grafana/healthz
              port: http
          readinessProbe:
            httpGet:
              path: /grafana/healthz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: GF_PATHS_CONFIG
              value: /conf/defaults.ini
            - name: PLATFORM_APISERVER_DOMAIN
              value: {{ include "ace.platformAPIServer" . }}
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: data
            {{- if (include "settings.grafanaConfigSecretName" .) }}
            - mountPath: /conf/defaults.ini
              name: config
              subPath: defaults.ini
            {{- end }}
      volumes:
        - name: data
          emptyDir: {}
        {{- with $secretName := (include "settings.grafanaConfigSecretName" .) }}
        - name: config
          secret:
            defaultMode: 420
            secretName: {{ $secretName }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
