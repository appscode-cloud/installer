apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dns-proxy.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "dns-proxy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "dns-proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dns-proxy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "appscode.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "image.registry" . }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          - run
        {{- if .Values.auth.domain }}
          - --api-server-addr=https://{{ .Values.auth.domain }}
        {{- end }}
        {{- if .Values.tlsSecretRef.name }}
          - --tls-cert=/etc/dns-proxy/certs/tls.crt
          - --tls-key=/etc/dns-proxy/certs/tls.key
        {{- end }}
          env:
          {{- if .Values.cloudflare.token }}
            - name: CLOUDFLARE_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "dns-proxy.fullname" . }}-cred
                  key: api-token
          {{- else }}
            - name: CLOUDFLARE_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cloudflare.secretRef.name }}
                  key: {{ .Values.cloudflare.secretRef.key }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
              {{- if .Values.hostPort.enabled }}
              hostPort: {{ .Values.service.port }}
              {{- end }}
            - name: metrics
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: metrics
          readinessProbe:
            httpGet:
              path: /
              port: metrics
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.tlsSecretRef.name }}
          volumeMounts:
            - name: certdir
              mountPath: /etc/dns-proxy/certs
      volumes:
        - name: certdir
          secret:
            defaultMode: 420
            secretName: {{ . }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
