{{ $vals := dict "offlineInstaller" $.Values.offlineInstaller "image" $.Values.image "registry" $.Values.registry "helm" dict }}

{{ $helmrepos := dig "repositories" dict $.Values.helm | deepCopy }}
{{ $_ := set $vals.helm "repositories" $helmrepos }}
{{ $_ := set $vals.helm "createNamespace" $.Values.helm.createNamespace }}

{{ $helmreleases := printf `
ace:
  version: %q
ace-installer:
  version: %q
# billing ui
license-proxyserver:
  version: %q
# b3 import flow
cluster-manager-spoke:
  version: %q
flux2:
  version: %q
opscenter-features:
  version: %q
  values:
    helm:
      releases:
        catalog-manager:
          values: %s
        kube-ui-server:
          values: %s
        monitoring-operator:
          values: %s
        service-gateway-presets:
          values: %s
        stash-presets:
          values: %s
`
  (dig "ace" "version" .Chart.AppVersion $.Values.helm.releases)
  .Chart.Version
  (dig "license-proxyserver" "version" .Chart.AppVersion $.Values.helm.releases)
  (dig "cluster-manager-spoke" "version" "" $.Values.helm.releases)
  (dig "flux2" "version" "" $.Values.helm.releases)
  (dig "opscenter-features" "version" .Chart.AppVersion $.Values.helm.releases)
  ((dig "opscenter-features" "values" "helm" "releases" "catalog-manager" "values" (dict) $.Values.helm.releases) | toJson)
  ((dig "opscenter-features" "values" "helm" "releases" "kube-ui-server" "values" (dict) $.Values.helm.releases) | toJson)
  ((dig "opscenter-features" "values" "helm" "releases" "monitoring-operator" "values" (dict) $.Values.helm.releases) | toJson)
  ((dig "opscenter-features" "values" "helm" "releases" "service-gateway-presets" "values" (dict) $.Values.helm.releases) | toJson)
  ((dig "opscenter-features" "values" "helm" "releases" "stash-presets" "values" (dict) $.Values.helm.releases) | toJson)
  | fromYaml }}

{{- if has $.Values.deploymentType (list "SelfHostedProduction" "CloudDemo" "OnpremDemo" "AWSMarketplace" "AzureMarketplace" "GoogleCloudMarketplace") }}
{{ $defaults := printf `
opscenter-features:
  values:
    helm:
      createNamespace: %v
      releases:
        license-proxyserver:
          values: %s
        license-proxyserver-manager:
          values: %s
`
  $.Values.helm.createNamespace
  ((dig "opscenter-features" "values" "helm" "releases" "license-proxyserver" "values" (dict) $.Values.helm.releases) | toJson)
  ((dig "opscenter-features" "values" "helm" "releases" "license-proxyserver-manager" "values" (dict) $.Values.helm.releases) | toJson)
  | fromYaml }}
{{ $helmreleases = mergeOverwrite $helmreleases $defaults }}
{{- end }}

{{ $spokeClusterAddons := printf `
spoke-cluster-addons:
  version: %q
  values:
    kubectl:
      image: %s
`
  (dig "spoke-cluster-addons" "version" .Chart.AppVersion $.Values.helm.releases)
  (include "kubectl.image" $)
  | fromYaml }}
{{ $helmreleases = mergeOverwrite $helmreleases $spokeClusterAddons }}

{{ $vcluster := printf `
vcluster:
  version: %q
  values:
    vcluster:
      image: "%s:v1.29.0-k3s1"
    sync:
      # persistentvolumes:
      #   enabled: true
      # If you want to create custom storage classes
      # inside the vcluster.
      hoststorageclasses:
        enabled: true
    telemetry:
      disabled: "true"
`
  (dig "vcluster" "version" .Chart.AppVersion $.Values.helm.releases)
  (include "image.dockerLibrary" (merge (dict "_repo" "rancher/k3s") $))
  | fromYaml }}
{{ $helmreleases = mergeOverwrite $helmreleases $vcluster }}

{{ $_ := set $vals.helm "releases" $helmreleases }}

apiVersion: charts.x-helm.dev/v1alpha1
kind: ClusterChartPreset
metadata:
  name: bootstrap-presets
  labels:
    ace.appscode.com/managed: "true"
spec:
  values:
    {{- toYaml $vals | nindent 4 }}
