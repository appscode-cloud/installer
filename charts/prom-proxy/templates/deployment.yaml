{{ $infra := .Values.infra }}
{{- if .Values.global }}
{{- $infra = .Values.global.infra }}
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prom-proxy.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "prom-proxy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "prom-proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prom-proxy.selectorLabels" . | nindent 8 }}
    spec:
      {{- include "appscode.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "appscode.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "image.registry" . }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - gitea
            - prom-proxy
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- if and (include "settings.objstoreSecretName" .) (eq $infra.objstore.provider "gcs") }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: {{ $infra.objstore.mountPath }}/sa.json
          {{- end }}
          {{- if and (include "settings.objstoreSecretName" .) (eq $infra.objstore.provider "s3") }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "settings.objstoreSecretName" . }}
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "settings.objstoreSecretName" . }}
                  key: AWS_SECRET_ACCESS_KEY
            {{- if $infra.objstore.s3.auth.AWS_REGION }}
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: {{ include "settings.objstoreSecretName" . }}
                  key: AWS_REGION
            {{- end }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data
            {{- if (include "settings.platformConfigSecretName" .) }}
            - name: config
              mountPath: /data/gitea/conf/app.ini
              subPath: app.ini
            {{- end }}
            {{- if (include "settings.objstoreSecretName" .) }}
            - name: objstore-cred
              mountPath: {{ $infra.objstore.mountPath }}
            {{- end }}
            {{- if (include "settings.caProviderClass" .) }}
            - name: cacerts
              mountPath: /etc/ssl/certs
            {{- end }}
      volumes:
        - name: data
          emptyDir: {}
        {{- with $secretName := (include "settings.platformConfigSecretName" .) }}
        - name: config
          secret:
            defaultMode: 420
            secretName: {{ $secretName }}
        {{- end }}
        {{- with $secretName := (include "settings.objstoreSecretName" .) }}
        - name: objstore-cred
          secret:
            defaultMode: 420
            secretName: {{ $secretName }}
        {{- end }}
        {{- with $cpc := (include "settings.caProviderClass" .) }}
        - name: cacerts
          csi:
            driver: cacerts.csi.cert-manager.io
            readOnly: true
            volumeAttributes:
              os: debian
              caProviderClasses: {{ $cpc }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
