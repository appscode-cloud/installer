# groupName for the webhook, issuers and clusterIssuers must match this
groupName: webhook.dns.appscode.com

# Docker registry fqdn used to pull app related images.
# Set this to use docker registry hosted at ${registryFQDN}/${registry}/${image}
registryFQDN: ghcr.io

# Docker registry containing app images
image:
  # Docker registry used to pull app container image
  registry: appscode
  # App container image
  repository: cert-manager-webhook-ace
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  pullPolicy: IfNotPresent

imagePullSecrets: []

# Number of webhook replicas
replicaCount: 1

# Override the name of the created resources
nameOverride: ""

# Override the full name of the created resources
fullnameOverride: ""

serviceAccount:
  # If true, create a new service account
  create: true
  # Service account to be used. If not set and serviceAccount.create is true, a name is generated using the fullname template
  name:
  # Annotations to add to the service account
  annotations: {}

certManager:
  # cert-manager's namespace
  namespace: cert-manager

  # cert-manager's serviceAccountName
  serviceAccountName: cert-manager

service:
  # service type for the webhook API server
  type: ClusterIP
  # port for the webhook API server
  port: 443

podAnnotations: {}

# Optional pod context. The yaml block should adhere to the [PodSecurityContext spec](https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#securitycontext-v1-core)
podSecurityContext: {}

# Security options this container should run with
securityContext: # +doc-gen:break
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534
  seccompProfile:
    type: RuntimeDefault

# CPU/memory resource requests/limits
resources: {}

# Node labels for pod assignment
nodeSelector: {}

# Node tolerations for pod assignment
tolerations: []

# Node affinity for pod assignment
affinity: {}
