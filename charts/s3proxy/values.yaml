# Default values for s3proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# Docker registry fqdn used to pull app related images.
# Set this to use docker registry hosted at ${registryFQDN}/${registry}/${image}
registryFQDN: ghcr.io

# Docker registry containing app images
image:
  # Docker registry used to pull app container image
  registry: appscode
  # App container image
  repository: s3proxy
  # Overrides the image tag whose default is the chart appVersion.
  tag: sha-a82ca68
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: # +doc-gen:break
  fsGroup: 65534

# Security options this container should run with
securityContext: # +doc-gen:break
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534
  seccompProfile:
    type: RuntimeDefault

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  domain: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # requests:
  #   cpu: 1
  #   memory: "1Gi"
  # limits:
  #   memory: "1Gi"

service:
  type: ClusterIP
  port: 9000

storageClass:
  name: ""

persistence:
  size: 10Gi

nodeSelector: {}

tolerations: []

affinity: {}

s3proxy:
  auth:
    accessKeyId: ""
    secretAccessKey: ""
  tls:
    enable: true
    issuer:
      name: ""
      kind: ""
    secret:
      name: ""
