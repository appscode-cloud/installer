{{- $major := default "0" .Capabilities.KubeVersion.Major | trimSuffix "+" | int64 }}
{{- $minor := default "0" .Capabilities.KubeVersion.Minor | trimSuffix "+" | int64 }}
{{- $criticalAddon := and .Values.criticalAddon (or (eq .Release.Namespace "kube-system") (and (ge $major 1) (ge $minor 17))) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "license-proxyserver.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "license-proxyserver.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "license-proxyserver.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "license-proxyserver.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/licenses: {{ include (print $.Template.BasePath "/licenses.yaml") . | sha256sum }}
        checksum/token: {{ include (print $.Template.BasePath "/token.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- include "appscode.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "license-proxyserver.serviceAccountName" . }}
      containers:
      - name: server
        securityContext:
          {{- toYaml .Values.image.securityContext | nindent 10 }}
        image: {{ include "image.registry" . }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.imagePullPolicy  }}
        args:
        - run
        - --v={{ .Values.logLevel }}
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --cache-dir=/tmp/licenses
        - --use-kubeapiserver-fqdn-for-aks={{ .Values.apiserver.useKubeapiserverFqdnForAks }}
        - --license-dir=/var/run/secrets/appscode/license
        {{- if .Values.hubKubeconfigSecretName }}
        - --hub-kubeconfig=/var/run/secrets/ocm/auth/kubeconfig
        {{- else }}
        {{- if include "platform.tokenSecretName" . }}
        - --baseURL={{ .Values.platform.baseURL }}
        - --token=$(PLATFORM_API_TOKEN)
        {{- end }}
        {{- if .Values.platform.caBundle }}
        - --ca-file=/var/platform-auth/ca.crt
        {{- end }}
        {{- if .Values.platform.insecureSkipTLSVerify }}
        - --insecure-skip-tls-verify={{ .Values.platform.insecureSkipTLSVerify }}
        {{- end }}
        {{- end }}
        {{- if .Values.clusterName }}
        - --cluster-name={{ .Values.clusterName }}
        {{- end }}
        ports:
        - containerPort: 8443
        - containerPort: 8080
        {{- with .Values.envFrom }}
        envFrom:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        env:
        {{- with .Values.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if and (include "platform.tokenSecretName" .) (empty .Values.hubKubeconfigSecretName) }}
        - name: PLATFORM_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "platform.tokenSecretName" . }}
              key: token
        {{- end }}
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      {{- if .Values.apiserver.healthcheck.enabled }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
      {{- end }}
        resources:
          {{- toYaml .Values.image.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /tmp/licenses
          name: cache-dir
        - mountPath: /var/serving-cert
          name: serving-cert
        - mountPath: /var/run/secrets/appscode/license
          name: licenses
        {{- if .Values.hubKubeconfigSecretName }}
        - mountPath: /var/run/secrets/ocm/auth
          name: ocm-auth
        {{- else }}
        {{- if .Values.platform.caBundle }}
        - mountPath: /var/platform-auth
          name: platform-auth
        {{- end }}
        {{- end }}
      volumes:
      - name: cache-dir
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: {{ include "license-proxyserver.fullname" . }}-apiserver-cert
      - name: licenses
        secret:
          defaultMode: 420
          secretName: {{ include "license-proxyserver.fullname" . }}-licenses
          optional: true
      {{- if .Values.hubKubeconfigSecretName }}
      - name: ocm-auth
        secret:
          defaultMode: 420
          secretName: {{ .Values.hubKubeconfigSecretName }}
      {{- end }}
      {{- if .Values.platform.caBundle }}
      - name: platform-auth
        secret:
          defaultMode: 420
          secretName: {{ include "license-proxyserver.fullname" . }}-platform-auth
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- if or .Values.tolerations $criticalAddon }}
      tolerations:
      {{- with .Values.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $criticalAddon }}
        - key: CriticalAddonsOnly
          operator: Exists
      {{- end -}}
    {{- end -}}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if $criticalAddon }}
      priorityClassName: system-cluster-critical
    {{- end -}}
