{{ $infra := .Values.infra }}
{{- if .Values.global }}
{{- $infra = .Values.global.infra }}
{{- end }}

apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "billing.fullname" . }}-aggregator
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: "aggregator"
    {{- include "billing.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.aggregator.schedule }}
  successfulJobsHistoryLimit: 3
  suspend: true
  jobTemplate:
    spec:
      template:
        spec:
          {{- include "appscode.imagePullSecrets" . | nindent 10 }}
          serviceAccountName: {{ include "appscode.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
            - name: {{ .Chart.Name }}
              securityContext:
                {{- toYaml .Values.securityContext | nindent 16 }}
              image: "{{ include "image.registry" . }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              args:
                - summary
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
              env:
              {{- if and (include "settings.objstoreSecretName" .) (eq $infra.objstore.provider "gcs") }}
                - name: GOOGLE_APPLICATION_CREDENTIALS
                  value: {{ $infra.objstore.mountPath }}/sa.json
              {{- end }}
              {{- if and (include "settings.objstoreSecretName" .) (eq $infra.objstore.provider "s3") }}
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "settings.objstoreSecretName" . }}
                      key: AWS_ACCESS_KEY_ID
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "settings.objstoreSecretName" . }}
                      key: AWS_SECRET_ACCESS_KEY
                {{- if $infra.objstore.s3.AWS_REGION }}
                - name: AWS_REGION
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "settings.objstoreSecretName" . }}
                      key: AWS_REGION
                {{- end }}
              {{- end }}
              {{- if and (include "settings.objstoreSecretName" .) (eq $infra.objstore.provider "azure") }}
                - name: AZURE_STORAGE_ACCOUNT
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "settings.objstoreSecretName" . }}
                      key: AZURE_ACCOUNT_NAME
                - name: AZURE_STORAGE_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "settings.objstoreSecretName" . }}
                      key: AZURE_ACCOUNT_KEY
              {{- end }}
              {{- if (include "settings.platformConfigSecretName" .) }}
                - name: B3_CONFIG_SECRET_NAME
                  value: {{ include "settings.platformConfigSecretName" . }}
              {{- end }}
              {{- if (include "settings.platformUserConfigSecretName" .) }}
                - name: B3_USER_CONFIG_SECRET_NAME
                  value: {{ include "settings.platformUserConfigSecretName" . }}
              {{- end }}
              {{- if (include "settings.platformSystemConfigSecretName" .) }}
                - name: B3_SYSTEM_CONFIG_SECRET_NAME
                  value: {{ include "settings.platformSystemConfigSecretName" . }}
              {{- end }}
              volumeMounts:
                - name: tmp
                  mountPath: /tmp
                - name: data
                  mountPath: /data
                {{- if (include "settings.platformConfigSecretName" .) }}
                - name: config
                  mountPath: /data/b3/conf
                {{- end }}
                {{- if (include "settings.objstoreSecretName" .) }}
                - name: objstore-cred
                  mountPath: {{ $infra.objstore.mountPath }}
                {{- end }}
                {{- if (include "settings.caProviderClass" .) }}
                - name: cacerts
                  mountPath: /etc/ssl/certs
                {{- end }}
                - name: invoice-store
                  mountPath: {{ $infra.invoice.mountPath }}
          volumes:
            - name: tmp
              emptyDir: {}
            - name: data
              emptyDir: {}
            - name: config
              projected:
                sources:
              {{- with $secretName := (include "settings.platformConfigSecretName" .) }}
                  - secret:
                      name: {{ $secretName }}
                      items:
                        - key: app.ini
                          path: app.ini
                          mode: 420
              {{- end }}
              {{- with $secretName := (include "settings.platformSystemConfigSecretName" .) }}
                  - secret:
                      name: {{ $secretName }}
                      items:
                        - key: system.ini
                          path: system.ini
                          mode: 420
              {{- end }}
              {{- with $secretName := (include "settings.platformUserConfigSecretName" .) }}
                  - secret:
                      name: {{ $secretName }}
                      items:
                        - key: user.ini
                          path: user.ini
                          mode: 420
              {{- end }}
            {{- with $secretName := (include "settings.objstoreSecretName" .) }}
            - name: objstore-cred
              secret:
                defaultMode: 420
                secretName: {{ $secretName }}
            {{- end }}
            {{- with $cpc := (include "settings.caProviderClass" .) }}
            - name: cacerts
              csi:
                driver: cacerts.csi.cert-manager.io
                readOnly: true
                volumeAttributes:
                  os: debian
                  caProviderClasses: {{ $cpc }}
            {{- end }}
            - name: invoice-store
              emptyDir: {}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: OnFailure
