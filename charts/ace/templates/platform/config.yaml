kind: Secret
apiVersion: v1
metadata:
  name: {{ include "settings.platformConfigSecretName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ace.labels" . | nindent 4 }}
stringData:
  app.ini: |-
    APP_NAME = {{ .Values.settings.platform.appName }}

    RUN_MODE = {{ .Values.settings.platform.runMode }}

    EXPERIMENTAL_FEATURES = {{ .Values.settings.platform.experimentalFeatures }}

    DOMAIN   = {{ .Values.settings.platform.domain }}

    [site_accounts]
    ; WHY http, not https?
    PROTOCOL = http
    DOMAIN = {{ .Values.settings.platform.domain }}
    ROOT_URL = https://accounts.{{ .Values.settings.platform.domain }}
    LANDING_PAGE = {{ .Values.settings.platform.serverLandingPage }}
    APP_DATA_PATH = /data

    [site_api]
    ; WHY http, not https?
    PROTOCOL = http
    DOMAIN = api.{{ .Values.settings.platform.domain }}
    ROOT_URL = https://api.{{ .Values.settings.platform.domain }}

    [picture]
    DISABLE_GRAVATAR        = false
    ENABLE_FEDERATED_AVATAR = true
    AVATAR_UPLOAD_PATH      = /avatars

    [storage]
    BUCKET_URL = {{ .Values.global.infra.avatars.bucket }}

    [server]
    PROTOCOL = http
    DOMAIN = {{ .Values.settings.platform.domain }}
    ROOT_URL = https://{{ .Values.settings.platform.domain }}
    LANDING_PAGE = {{ .Values.settings.platform.serverLandingPage }}
    SSH_DOMAIN = {{ default .Values.settings.platform.domain .Values.settings.sshDomain }}
    SSH_PORT = {{ .Values.settings.sshPort }}
    SSH_LISTEN_PORT = {{ .Values.settings.sshPort }}

    [database]
    DB_TYPE = "postgres"
    HOST = {{ template "settings.database.host" . }}
    NAME = {{ .Values.settings.db.databaseName }}
    USER = {{ .Values.settings.db.auth.username }}
    PASSWD = {{ .Values.settings.db.auth.password }}

    [session]
    DOMAIN = {{ .Values.settings.platform.domain }}
    PROVIDER = {{ .Values.settings.platform.sessionProvider }}
    PROVIDER_CONFIG = {{ template "settings.session.host" . }}
    COOKIE_NAME = {{ .Values.settings.platform.cookieName}}

    [cache]
    ADAPTER = redis
    INTERVAL = {{ .Values.settings.cache.cacheInterval }}
    HOST = {{ template "settings.cache.host" . }}

{{- with .Values.settings.smtp }}
    [mailer]
    ENABLED = true
    MAILER_TYPE = smtp
    HOST    = {{ .host }}
    IS_TLS_ENABLED = {{ .tlsEnabled }}
    FROM    = {{ .from }}
    USER    = {{ .username }}
    PASSWD  = {{ .password}}
    SUBJECT_PREFIX = {{ .subjectPrefix }}
    SEND_AS_PLAIN_TEXT = {{ .sendAsPlainText }}
{{- end }}

    [log]
    MODE = {{ .Values.settings.platform.logMode }}
    LEVEL = {{ .Values.settings.platform.logLevel }}

    [oauth2]
    JWT_SECRET = {{ include  "settings.oauth2JWTSecret" . }}

    [security]
    SECRET_KEY     = {{ include "settings.csrfSecretkey" . }}
    INSTALL_LOCK = {{ .Values.settings.platform.installLock }}
    CSRF_COOKIE_HTTP_ONLY = {{ .Values.settings.platform.enableCSRFCookieHttpOnly }}

    [service]
    ENABLE_CAPTCHA = {{ .Values.settings.platform.serviceEnableCaptcha }}
    ACTIVE_CODE_LIVE_MINUTES = 180
    RESET_PASSWD_CODE_LIVE_MINUTES = 180
    REGISTER_EMAIL_CONFIRM = {{ .Values.settings.platform.serviceRegisterEmailConfirm }}
    DISABLE_REGISTRATION = {{ .Values.settings.platform.serviceDisableRegistration }}
    REQUIRE_SIGNIN_VIEW = {{ .Values.settings.platform.serviceRequireSignInView }}
    ENABLE_NOTIFY_MAIL = {{ .Values.settings.platform.serviceEnableNotifyMail }}
    ENABLE_REVERSE_PROXY_AUTHENTICATION = false
    ENABLE_REVERSE_PROXY_AUTO_REGISTRATION = false
    NO_REPLY_ADDRESS = {{ .Values.settings.smtp.from }}

    [other]
    SHOW_FOOTER_BRANDING = {{ .Values.settings.platform.otherShowFooterBranding }}
    SHOW_FOOTER_VERSION = {{ .Values.settings.platform.otherShowFooterVersion }}
    SHOW_FOOTER_TEMPLATE_LOAD_TIME = {{ .Values.settings.platform.otherShowFooterTemplateLoadTime }}

  {{- if (include "monitoring.agent" .) }}
    [metrics]
    ENABLED = true
  {{- end }}

    [cors]
    ENABLED = true
    SCHEME = https
    ALLOW_DOMAIN = {{ .Values.settings.platform.domain }}
    ALLOW_SUBDOMAIN = true

  {{- if .Values.billing.enabled }}
    [payment_gateway]
    PROVIDERS = stripe
    STRIPE_KEY = {{ .Values.settings.stripe.stripeKey }}
    ENDPOINT_SECRET = {{ .Values.settings.stripe.endpointSecret }}
  {{- end }}

    [kms]
    MASTER_KEY_URL = '{{ include "settings.kms.masterKeyURL" . }}'

    [searchlight]
    ENABLE = {{ .Values.settings.searchlight.enabled }}
  {{- if .Values.settings.searchlight.enabled }}
    ALERTMANAGER_ADDR = {{ .Values.settings.searchlight.alertmanagerAddr }}
    QUERY_ADDR = {{ .Values.settings.searchlight.queryAddr }}
    RULER_ADDR = {{ .Values.settings.searchlight.rulerAddr }}
    M3COORDINATOR_ADDR = {{ .Values.settings.searchlight.m3coordinatorAddr }}
  {{- end }}

  {{- if .Values.nats.enabled }}
    [nats]
    OPERATOR_CREDS = {{ .Values.settings.nats.mountPath }}/Operator.creds
    SYSTEM_CREDS = {{ .Values.settings.nats.mountPath }}/SYS.creds
    SYSTEM_USER_CREDS = {{ .Values.settings.nats.mountPath }}/sys.creds
    ADMIN_CREDS = {{ .Values.settings.nats.mountPath }}/ADMIN.creds
    ADMIN_USER_CREDS = {{ .Values.settings.nats.mountPath }}/admin.creds

    ; When TLS is not used, use cluster svc ip
    ;ACCOUNT_RESOLVER = nats://{{ include "ace.fullname" . }}-nats.{{ .Release.Namespace }}.svc:4222
    ;SERVER = nats://{{ include "ace.fullname" . }}-nats.{{ .Release.Namespace }}.svc:4222,nats://nats.{{ .Values.settings.platform.domain }}:4222

    ACCOUNT_RESOLVER = nats://nats.{{ .Values.settings.platform.domain }}:4222
    NATS_SERVER = wss://nats.{{ .Values.settings.platform.domain }}
    SERVER = nats://nats.{{ .Values.settings.platform.domain }}:4222
    WEBSOCKET_SERVER = wss://nats.{{ .Values.settings.platform.domain }}
    SHARD_COUNT = {{ .Values.settings.nats.shardCount }}
    REPLICAS = {{ .Values.settings.nats.replicas }}
  {{- end }}

{{- if .Values.global.infra.objstore.provider }}
  {{- if .Values.billing.enabled }}
    [badger]
    PATH = {{ .Values.global.infra.badger.mountPath }}
    LEVELS = {{ .Values.global.infra.badger.levels }}

    [invoice]
    PATH = {{ .Values.global.infra.invoice.mountPath }}
    HOST = {{ .Values.global.infra.invoice.host }}
    BUCKET = {{ .Values.global.infra.invoice.bucket }}
    TRACKER_EMAIL = {{ .Values.global.infra.invoice.trackerEmail }}
  {{- if eq .Values.global.infra.objstore.provider "Google" }}
    CREDENTIAL = {{ .Values.global.infra.objstore.mountPath }}/sa.json
  {{- end }}
  {{- end }}

    [yaml_storage]
    HOST = {{ .Values.global.infra.kubepack.host }}
    BUCKET = {{ .Values.global.infra.kubepack.bucket }}
  {{- if eq .Values.global.infra.objstore.provider "Google" }}
    CREDENTIAL = {{ .Values.global.infra.objstore.mountPath }}/sa.json
  {{- end }}
{{- end }}

{{- if .Values.clusterConnector.registry }}
    [cluster_connector]
    REGISTRY    = {{ .Values.clusterConnector.registry }}
    REPOSITORY  = {{ .Values.clusterConnector.repository }}
    TAG         = {{ .Values.clusterConnector.tag }}
{{- end }}
