apiVersion: kubedb.com/v1
kind: Postgres
metadata:
  name: {{ include "ace.fullname" . }}-db
  namespace: {{ .Release.Namespace }}
  labels:
    archiver: "true"
    {{- include "ace.labels" . | nindent 4 }}
spec:
  version: "{{ .Values.settings.db.version }}"
  replicas: 3
  storageType: Durable
  storage:
    storageClassName: {{ .Values.global.infra.storageClass.name }}
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: {{ .Values.settings.db.persistence.size }}
  podTemplate:
    spec:
      containers:
      - name: postgres
        resources:
          {{- toYaml .Values.settings.db.resources | nindent 10 }}
    {{- if eq (include "clustermanager.openshift" $) "true" }}
        securityContext:
          runAsGroup: {{ .Values.securityContext.runAsUser }}
          runAsUser: {{ .Values.securityContext.runAsUser }}
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      - name: pg-coordinator
        securityContext:
          runAsGroup: {{ .Values.securityContext.runAsUser }}
          runAsUser: {{ .Values.securityContext.runAsUser }}
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      initContainers:
      - name: postgres-init-container
        securityContext:
          runAsGroup: {{ .Values.securityContext.runAsUser }}
          runAsUser: {{ .Values.securityContext.runAsUser }}
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      securityContext:
        fsGroup: {{ .Values.securityContext.runAsUser }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsUser }}
    {{- end }}
  deletionPolicy: {{ .Values.settings.db.deletionPolicy }}
  authSecret:
    name: {{ include "ace.fullname" . }}-db-auth
    externallyManaged: true
  configSecret:
    name: {{ include "ace.fullname" . }}-db-config
  init:
    waitForInitialRestore: false
    script:
      secret:
        secretName: {{ include "ace.fullname" . }}-db-init-script
{{- if .Values.global.monitoring }}
  monitor:
    agent: {{ .Values.global.monitoring.agent }}
    prometheus:
      exporter:
      {{- with .Values.global.monitoring.exporter.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- if eq (include "clustermanager.openshift" $) "true" }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: {{ .Values.securityContext.runAsUser }}
          runAsNonRoot: true
          runAsUser: {{ .Values.securityContext.runAsUser }}
          seccompProfile:
            type: RuntimeDefault
      {{- end }}
      serviceMonitor:
        interval: 30s
        labels:
          {{- toYaml .Values.global.monitoring.serviceMonitor.labels | nindent 10 }}
{{- end }}
