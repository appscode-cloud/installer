# Default values for ace.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Overrides name template
nameOverride: ""
# Overrides fullname template
fullnameOverride: ""

replicaCount: 1

# Docker registry fqdn used to pull app related images.
# Set this to use docker registry hosted at ${registryFQDN}/${registry}/${image}
registryFQDN: ghcr.io

# Docker registry containing app images
image:
  # Docker registry used to pull app container image
  registry: appscode
  # App container image
  repository: b3
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  pullPolicy: Always

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Specify an array of imagePullSecrets.
# Secrets must be manually created in the namespace.
#
# Example:
# helm template charts/ace \
#   --set global.imagePullSecrets[0].name=sec0 \
#   --set global.imagePullSecrets[1].name=sec1
imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

monitoring:
  # Name of monitoring agent (eg "prometheus.io/operator")
  agent: ""
  serviceMonitor:
    # Specify the labels for ServiceMonitor.
    # Prometheus crd will select ServiceMonitor using these labels.
    # Only usable when monitoring agent is `prometheus.io/operator`.
    labels: {}
  exporter:
    resources:
      requests:
        # cpu: 100m
        memory: 128Mi

infra:
  clusterName: "tamal-gateway"
  gatewayDomain: gw.kubedb.cloud
  storageClass:
    name: "standard"
  tls:
    issuer: "ca" # ca,letsencrypt,letsencrypt-staging
    ca:
      cert: ""
      key: ""
    acme:
      email: ops@appscode.com
    certificate:
      cert: ""
      key: ""
  dns:
    provider: "external" # external,cloudflare,route53,cloudDNS
    auth: {}
      # cloudflare:
        # token: xyz
      # cloudDNS:
        # GOOGLE_PROJECT_ID: "project-id"
        # GOOGLE_SERVICE_ACCOUNT_JSON_KEY: xyz
      # azureDNS:
        # subscriptionID: "azure-subscription-id"
        # tenantID: "azure-tenant-id"
        # resourceGroupName: "resource-group-name"
        # hostedZoneName: "zone-name-for-hosted-domain"
        # servicePrincipalAppID: "service-principal-id"
        # servicePrincipalAppPassword: "service-principal-app"
        # environment: AzurePublicCloud
      # route53:
        # AWS_ACCESS_KEY_ID: "access-id"
        # AWS_SECRET_ACCESS_KEY: "secret-key"
        # AWS_REGION: "us-east-1"

# https://github.com/kubernetes-sigs/external-dns/blob/master/docs/sources/service.md
gateway-dns:
  enabled: false
